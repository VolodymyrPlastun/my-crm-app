{"version":3,"file":"static/js/46.7ed2eb82.chunk.js","mappings":"oRA2DA,EAlDwB,WACxB,OAAwBA,EAAAA,EAAAA,UAAS,CAC7BC,MAAO,GACPC,SAAU,KAFd,eAAOC,EAAP,KAAaC,EAAb,KAIMC,GAAWC,EAAAA,EAAAA,MAoBXC,EAAc,SAACC,GACrB,IAAMC,GAAM,UAAKD,EAAIE,OAAOC,KAAQH,EAAIE,OAAOE,OAC/CR,GAAQ,kBAAID,GAASM,GACpB,EACG,OACI,iCACA,iDACA,UAAC,EAAAI,KAAD,CAAMC,SAzBO,SAACN,GACtBA,EAAIO,iBACJ,IAAOd,EAAmBE,EAAnBF,MAAOC,EAAYC,EAAZD,UACdc,EAAAA,EAAAA,IAA+BC,EAAAA,GAAMhB,EAAOC,GAC3CgB,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAAIG,OAChBC,EAAAA,EAAAA,IAAiBtB,EAAO,CAACA,MAAAA,EAAOC,SAAAA,IAChCG,EAAS,UACTmB,EAAAA,GAAAA,QAAc,sBACjB,IACAC,OAAM,SAAAC,GACc,iDAAhBA,EAAIC,SACLH,EAAAA,GAAAA,MAAY,gDAEf,GACA,EAUO,WACA,UAAC,EAAAX,KAAA,MAAD,YACE,kBAAOe,QAAQ,qBAAf,4BACA,SAAC,EAAAf,KAAA,MAAD,CAAYgB,SAAUtB,EAAaI,KAAK,QAAQmB,KAAK,QAAQC,GAAG,qBAAqBC,YAAY,cAAcC,IAAE,QAEnH,UAAC,EAAApB,KAAA,MAAD,YACE,kBAAOe,QAAQ,wBAAf,uBACA,SAAC,EAAAf,KAAA,MAAD,CAAYgB,SAAUtB,EAAaI,KAAK,WAAWmB,KAAK,WAAWC,GAAG,wBAAwBC,YAAY,WAAWC,IAAE,QAIzH,SAAC,EAAAC,OAAD,CAAQC,SAAO,EAACL,KAAK,SAArB,sBACA,UAAC,EAAAjB,KAAA,KAAD,wCAAqC,SAAC,KAAD,CAAMuB,GAAG,sBAAT,gCAI5C,C,0LC5CYC,GAAMC,EAAAA,EAAAA,IATI,CACnBC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,8CAIE3B,GAAO4B,EAAAA,EAAAA,IAAQR,GACfS,GAAKC,EAAAA,EAAAA,IAAaV,GAClBW,EAAqB,IAAIC,EAAAA,GACzBC,EAAqB,IAAIC,EAAAA,GACzBC,EAAuB,IAAIC,EAAAA,E,uKCflCC,GAAWC,EAAAA,EAAAA,IAAWT,EAAAA,GAAI,SAElBU,EAAO,mCAAG,WAAOpD,GAAP,wFACLqD,EAAAA,EAAAA,IAAQH,GADH,OAClBnD,EADkB,OAEpBC,EAAQD,EAAKuD,KAAKC,KAAI,SAAAC,GACpB,OAAO,kBAAIA,EAAKzD,QAAhB,IAAwB4B,GAAI6B,EAAK7B,IAClC,KAJmB,2CAAH,sDAQPR,EAAgB,mCAAG,WAAOtB,EAAOE,GAAd,8EACvB0D,GAAIC,EAAAA,EAAAA,IAAMR,GAAUS,EAAAA,EAAAA,IAAM,QAAS,KAAM9D,IADlB,UAGDwD,EAAAA,EAAAA,IAAQI,GAHP,kBAMXG,MANW,iCAOnBC,EAAAA,EAAAA,IAAOX,EAAUnD,GAPE,2CAAH,wDAWb+D,EAAgB,mCAAG,WAAOC,EAAahE,GAApB,8EACtB0D,GAAIC,EAAAA,EAAAA,IAAMR,GAAUS,EAAAA,EAAAA,IAAM,cAAe,KAAOI,IAD1B,UAGAV,EAAAA,EAAAA,IAAQI,GAHR,kBAMVG,MANU,uBAOxB5C,QAAQC,IAAI,YAPY,UASlB4C,EAAAA,EAAAA,IAAOX,EAAUnD,GATC,2CAAH,uD","sources":["Pages/SignUpWithEmail/SignUpWithEmail.jsx","firebase.js","firestoreApi.js"],"sourcesContent":["import { Form, Button } from 'bootstrap-4-react';\nimport { useState } from 'react';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { Link } from 'react-router-dom';\nimport { auth } from '../../firebase';\nimport { useNavigate } from 'react-router-dom';\nimport { isUserExistEmail } from '../../firestoreApi';\nimport { toast } from 'react-hot-toast';\n\nconst SignUpWithEmail = () => {\nconst [data, setData] = useState({\n    email: \"\",\n    password: \"\",\n});\nconst navigate = useNavigate();\n\nconst hundleSubmit = (evt) => {\nevt.preventDefault();\nconst {email, password} = data;\ncreateUserWithEmailAndPassword(auth, email, password)\n.then(res => {\n    console.log(res.user);\n    isUserExistEmail(email, {email, password});\n    navigate('/users');\n    toast.success('Welcome to your CRM');\n})\n.catch(err => {\n  if(err.message === \"Firebase: Error (auth/email-already-in-use).\") {\n    toast.error(\"You already have an account, go to link below\")\n  }\n})\n};\n\n\nconst inputChange = (evt) => {\nconst inputs = {[evt.target.name] : evt.target.value};\nsetData({...data, ...inputs});\n};\n    return (\n        <>\n        <h1>Create your account</h1>\n        <Form onSubmit={hundleSubmit}>\n        <Form.Group>\n          <label htmlFor=\"exampleInputEmail1\">Email address</label>\n          <Form.Input onChange={inputChange} name=\"email\" type=\"email\" id=\"exampleInputEmail1\" placeholder=\"Enter email\" lg/>\n        </Form.Group>\n        <Form.Group>\n          <label htmlFor=\"exampleInputPassword1\">Password</label>\n          <Form.Input onChange={inputChange} name=\"password\" type=\"password\" id=\"exampleInputPassword1\" placeholder=\"Password\" lg/>\n        </Form.Group>\n        \n       \n        <Button primary type=\"submit\">Sign Up</Button>\n        <Form.Text >Already have an account? <Link to='/sign-in-with-email'>Click here</Link></Form.Text>\n      </Form>\n      </>\n    )\n};\n\nexport default SignUpWithEmail;","import { initializeApp } from 'firebase/app';\nimport { GithubAuthProvider, GoogleAuthProvider, getAuth, FacebookAuthProvider } from 'firebase/auth';\nimport {getFirestore} from 'firebase/firestore';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyD9vfvfkZR7Jm1x7wNDIhh6PcfI19jMWJg\",\n    authDomain: \"crm-project-4aaef.firebaseapp.com\",\n    projectId: \"crm-project-4aaef\",\n    storageBucket: \"crm-project-4aaef.appspot.com\",\n    messagingSenderId: \"161287361864\",\n    appId: \"1:161287361864:web:19d90ee4a5cc4a927ecf7d\"\n  };\n  \nexport const app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\nexport const googleAuthProvider = new GoogleAuthProvider();\nexport const githubAuthProvider = new GithubAuthProvider();\nexport const facebookAuthProvider = new FacebookAuthProvider();\n\n","import { collection, addDoc, getDocs, query, where } from 'firebase/firestore';\nimport { db } from './firebase';\n\nconst database = collection(db, 'users');\n\n export const getData = async (setData) => {\nconst data = await getDocs(database);\n    setData(data.docs.map(item => {\n      return {...item.data(), id: item.id }\n    }));\n  };\n\n\n export const isUserExistEmail = async (email, data) => {\n    const q = query(database, where(\"email\", \"==\", email))\n    \n    const querySnapshot = await getDocs(q);\n    \n    \n    if (querySnapshot.empty) {\n        await addDoc(database, data);\n      } \n    }\n\n    export const isUserExistPhone = async (phoneNumber, data) => {\n        const q = query(database, where(\"phoneNumber\", \"==\",  phoneNumber))\n        \n        const querySnapshot = await getDocs(q);\n        \n        \n        if (querySnapshot.empty) {\n            console.log(\"Add user\");\n           \n            await addDoc(database, data);\n          }\n        }"],"names":["useState","email","password","data","setData","navigate","useNavigate","inputChange","evt","inputs","target","name","value","Form","onSubmit","preventDefault","createUserWithEmailAndPassword","auth","then","res","console","log","user","isUserExistEmail","toast","catch","err","message","htmlFor","onChange","type","id","placeholder","lg","Button","primary","to","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","db","getFirestore","googleAuthProvider","GoogleAuthProvider","githubAuthProvider","GithubAuthProvider","facebookAuthProvider","FacebookAuthProvider","database","collection","getData","getDocs","docs","map","item","q","query","where","empty","addDoc","isUserExistPhone","phoneNumber"],"sourceRoot":""}