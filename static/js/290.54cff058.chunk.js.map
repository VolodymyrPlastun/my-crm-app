{"version":3,"file":"static/js/290.54cff058.chunk.js","mappings":"+NAGaA,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,KAAAA,KAAPD,CAAH,+CAIRE,EAAYF,EAAAA,GAAAA,KAAH,8CAITG,EAAcH,EAAAA,GAAAA,GAAH,qH,SCkBxB,EAxBkB,WACd,OAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJEC,EAAAA,EAAAA,YAAW,YACVC,EAAAA,EAAAA,IAAQF,EACR,GAAE,CAACD,KAGF,8BACCA,EAAQI,KAAI,SAAAC,GACT,OACZ,UAAC,EAAAT,KAAD,WACCS,EAAKC,cAAe,UAACZ,EAAD,gBAAW,SAACG,EAAD,qBAA8BQ,EAAKC,eAClED,EAAKE,OAAQ,UAACb,EAAD,YAAU,SAACG,EAAD,qBAA8BQ,EAAKE,QAC9CF,EAAKG,QAAS,UAACd,EAAD,YAAU,SAACG,EAAD,sBAA+BQ,EAAKG,SAC5DH,EAAKI,cAAe,UAACf,EAAD,YAAU,SAACG,EAAD,uBAAgCQ,EAAKI,gBAEpE,SAACX,EAAD,MANDO,EAAKK,GAOG,KAIlB,C,0LCdYC,GAAMC,EAAAA,EAAAA,IATI,CACnBC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,8CAIEC,GAAOC,EAAAA,EAAAA,IAAQT,GACfU,GAAKC,EAAAA,EAAAA,IAAaX,GAClBY,EAAqB,IAAIC,EAAAA,GACzBC,EAAqB,IAAIC,EAAAA,GACzBC,EAAuB,IAAIC,EAAAA,E,uKCflCC,GAAWC,EAAAA,EAAAA,IAAWT,EAAAA,GAAI,SAElBlB,EAAO,mCAAG,WAAO4B,GAAP,wFACLC,EAAAA,EAAAA,IAAQH,GADH,OAClBI,EADkB,OAEpBF,EAAQE,EAAKC,KAAK9B,KAAI,SAAAC,GACpB,OAAO,kBAAIA,EAAK4B,QAAhB,IAAwBvB,GAAIL,EAAKK,IAClC,KAJmB,2CAAH,sDAQPyB,EAAgB,mCAAG,WAAO3B,EAAOyB,GAAd,8EACvBG,GAAIC,EAAAA,EAAAA,IAAMR,GAAUS,EAAAA,EAAAA,IAAM,QAAS,KAAM9B,IADlB,UAGDwB,EAAAA,EAAAA,IAAQI,GAHP,kBAMXG,MANW,iCAOnBC,EAAAA,EAAAA,IAAOX,EAAUI,GAPE,2CAAH,wDAWbQ,EAAgB,mCAAG,WAAOhC,EAAawB,GAApB,8EACtBG,GAAIC,EAAAA,EAAAA,IAAMR,GAAUS,EAAAA,EAAAA,IAAM,cAAe,KAAO7B,IAD1B,UAGAuB,EAAAA,EAAAA,IAAQI,GAHR,kBAMVG,MANU,uBAOxBG,QAAQC,IAAI,YAPY,UASlBH,EAAAA,EAAAA,IAAOX,EAAUI,GATC,2CAAH,uD","sources":["Pages/UsersList/UsersList.styled.jsx","Pages/UsersList/UsersList.jsx","firebase.js","firestoreApi.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { List } from 'bootstrap-4-react';\n\nexport const ListItem = styled(List.Item)`\n  margin-bottom: 8px;\n`;\n\nexport const ItemLabel = styled.span`\n  font-weight: bold;\n`;\n\nexport const ListDivider = styled.hr`\n  border: none;\n  border-top: 1px solid #ccc;\n  margin-top: 16px;\n  margin-bottom: 16px;\n`;","import { List } from 'bootstrap-4-react';\nimport { useState, useEffect } from \"react\";\nimport { getData } from '../../firestoreApi';\nimport {  ListItem, ItemLabel, ListDivider } from './UsersList.styled';\n\nconst UsersList = () => {\n    const [dataArr, setDataArr] = useState([]);\n\n      useEffect( () => {\n       getData(setDataArr);\n      }, [dataArr]);\n\n    return (\n        <>\n        {dataArr.map(item => {\n            return (\n<List key={item.id}>\n{item.displayName && <ListItem> <ItemLabel>Name: </ItemLabel>{item.displayName}</ListItem>}\n{item.name && <ListItem><ItemLabel>Name: </ItemLabel>{item.name}</ListItem>}\n            {item.email && <ListItem><ItemLabel>Email: </ItemLabel>{item.email}</ListItem>}\n            {item.phoneNumber && <ListItem><ItemLabel>Number: </ItemLabel>{item.phoneNumber}</ListItem>}\n          \n            <ListDivider/>\n          </List>)})}\n\n        </>\n    )\n};\n\nexport default UsersList;","import { initializeApp } from 'firebase/app';\nimport { GithubAuthProvider, GoogleAuthProvider, getAuth, FacebookAuthProvider } from 'firebase/auth';\nimport {getFirestore} from 'firebase/firestore';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyD9vfvfkZR7Jm1x7wNDIhh6PcfI19jMWJg\",\n    authDomain: \"crm-project-4aaef.firebaseapp.com\",\n    projectId: \"crm-project-4aaef\",\n    storageBucket: \"crm-project-4aaef.appspot.com\",\n    messagingSenderId: \"161287361864\",\n    appId: \"1:161287361864:web:19d90ee4a5cc4a927ecf7d\"\n  };\n  \nexport const app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\nexport const googleAuthProvider = new GoogleAuthProvider();\nexport const githubAuthProvider = new GithubAuthProvider();\nexport const facebookAuthProvider = new FacebookAuthProvider();\n\n","import { collection, addDoc, getDocs, query, where } from 'firebase/firestore';\nimport { db } from './firebase';\n\nconst database = collection(db, 'users');\n\n export const getData = async (setData) => {\nconst data = await getDocs(database);\n    setData(data.docs.map(item => {\n      return {...item.data(), id: item.id }\n    }));\n  };\n\n\n export const isUserExistEmail = async (email, data) => {\n    const q = query(database, where(\"email\", \"==\", email))\n    \n    const querySnapshot = await getDocs(q);\n    \n    \n    if (querySnapshot.empty) {\n        await addDoc(database, data);\n      } \n    }\n\n    export const isUserExistPhone = async (phoneNumber, data) => {\n        const q = query(database, where(\"phoneNumber\", \"==\",  phoneNumber))\n        \n        const querySnapshot = await getDocs(q);\n        \n        \n        if (querySnapshot.empty) {\n            console.log(\"Add user\");\n           \n            await addDoc(database, data);\n          }\n        }"],"names":["ListItem","styled","List","ItemLabel","ListDivider","useState","dataArr","setDataArr","useEffect","getData","map","item","displayName","name","email","phoneNumber","id","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","googleAuthProvider","GoogleAuthProvider","githubAuthProvider","GithubAuthProvider","facebookAuthProvider","FacebookAuthProvider","database","collection","setData","getDocs","data","docs","isUserExistEmail","q","query","where","empty","addDoc","isUserExistPhone","console","log"],"sourceRoot":""}