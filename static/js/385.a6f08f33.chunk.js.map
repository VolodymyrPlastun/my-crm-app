{"version":3,"file":"static/js/385.a6f08f33.chunk.js","mappings":"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","sources":["Pages/AddRole/AddRole.styled.jsx","Pages/AddRole/AddRole.jsx","firebase.js","firestoreApi.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { List } from 'bootstrap-4-react';\n\nexport const ListItem = styled(List.Item)`\n  margin-bottom: 8px;\n`;\n\nexport const ItemLabel = styled.span`\n  font-weight: bold;\n`;\n\nexport const ListDivider = styled.hr`\n  border: none;\n  border-top: 1px solid #ccc;\n  margin-top: 16px;\n  margin-bottom: 16px;\n`;","import { useEffect, useState } from \"react\";\nimport { getData } from \"../../firestoreApi\";\nimport { List, Form } from \"bootstrap-4-react\";\nimport { updateDoc, doc } from \"firebase/firestore\";\nimport { db } from \"../../firebase\";\nimport { toast } from 'react-hot-toast';\nimport {  ListItem, ListDivider, ItemLabel } from \"./AddRole.styled\";\n\n\nconst AddRole = () => {\n    const [dataArr, setDataArr] = useState([]);\n\n    useEffect(() =>{\n        getData(setDataArr);\n      }, []);\n\nconst updateData = (id, role) => {\n                let updatedData = doc(db, 'users', id);\n                updateDoc(updatedData, {\n                    role,\n                })\n                .then(() => {\n                  toast.success('Role added');\n                  getData(setDataArr);\n                })\n                .catch(err => {\n                  toast.error(err.message)\n                })\n              };\n\n  return (\n    <div>\n      {dataArr.map(item => {\n            return (\n                <div key={item.id}>\n         <Form.CustomSelect defaultValue=\"Choose Role\" onChange={(evt) => updateData(item.id, evt.target.value)} sm mb=\"3\">\n         <option disabled>Choose Role</option>\n          <option value=\"Driver\">Driver</option>\n          <option value=\"Passenger\">Passenger</option>\n          <option value=\"Dispatcher\">Dispatcher</option>\n        </Form.CustomSelect>\n<List >\n{item.displayName && <ListItem><ItemLabel>Name:</ItemLabel> {item.displayName}</ListItem>}\n{item.name && <ListItem><ItemLabel>Name:</ItemLabel> {item.name}</ListItem>}\n            {item.email && <ListItem><ItemLabel>Email:</ItemLabel> {item.email}</ListItem>}\n            {item.phoneNumber && <ListItem><ItemLabel>Number:</ItemLabel> {item.phoneNumber}</ListItem>}\n            {item.role && <ListItem><ItemLabel>Role:</ItemLabel> {item.role}</ListItem>}\n            <ListDivider/>\n          </List>\n          </div>)})}\n    </div>\n  )\n}\n\nexport default AddRole;\n","import { initializeApp } from 'firebase/app';\nimport { GithubAuthProvider, GoogleAuthProvider, getAuth, FacebookAuthProvider } from 'firebase/auth';\nimport {getFirestore} from 'firebase/firestore';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyD9vfvfkZR7Jm1x7wNDIhh6PcfI19jMWJg\",\n    authDomain: \"crm-project-4aaef.firebaseapp.com\",\n    projectId: \"crm-project-4aaef\",\n    storageBucket: \"crm-project-4aaef.appspot.com\",\n    messagingSenderId: \"161287361864\",\n    appId: \"1:161287361864:web:19d90ee4a5cc4a927ecf7d\"\n  };\n  \nexport const app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\nexport const googleAuthProvider = new GoogleAuthProvider();\nexport const githubAuthProvider = new GithubAuthProvider();\nexport const facebookAuthProvider = new FacebookAuthProvider();\n\n","import { collection, addDoc, getDocs, query, where } from 'firebase/firestore';\nimport { db } from './firebase';\n\nconst database = collection(db, 'users');\n\n export const getData = async (setData) => {\nconst data = await getDocs(database);\n    setData(data.docs.map(item => {\n      return {...item.data(), id: item.id }\n    }));\n  };\n\n\n export const isUserExistEmail = async (email, data) => {\n    const q = query(database, where(\"email\", \"==\", email))\n    \n    const querySnapshot = await getDocs(q);\n    \n    \n    if (querySnapshot.empty) {\n        await addDoc(database, data);\n      } \n    }\n\n    export const isUserExistPhone = async (phoneNumber, data) => {\n        const q = query(database, where(\"phoneNumber\", \"==\",  phoneNumber))\n        \n        const querySnapshot = await getDocs(q);\n        \n        \n        if (querySnapshot.empty) {\n            console.log(\"Add user\");\n           \n            await addDoc(database, data);\n          }\n        }"],"names":["ListItem","styled","List","ItemLabel","ListDivider","useState","dataArr","setDataArr","useEffect","getData","map","item","Form","defaultValue","onChange","evt","id","role","updatedData","doc","db","updateDoc","then","toast","catch","err","message","updateData","target","value","sm","mb","disabled","displayName","name","email","phoneNumber","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","getFirestore","googleAuthProvider","GoogleAuthProvider","githubAuthProvider","GithubAuthProvider","facebookAuthProvider","FacebookAuthProvider","database","collection","setData","getDocs","data","docs","isUserExistEmail","q","query","where","empty","addDoc","isUserExistPhone","console","log"],"sourceRoot":""}