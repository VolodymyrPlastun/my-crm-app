{"version":3,"file":"static/js/473.e21ee334.chunk.js","mappings":"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","sources":["Pages/Home/Home.jsx","firebase.js","firestoreApi.js"],"sourcesContent":["import { List } from 'bootstrap-4-react';\nimport {mail, phone, github, google, facebook} from '../../icons';\nimport { Link } from 'react-router-dom';\nimport { useState } from \"react\";\nimport {  signInWithPopup } from \"firebase/auth\";\nimport { googleAuthProvider, facebookAuthProvider, githubAuthProvider, auth } from \"../../firebase\";\nimport { isUserExistEmail } from '../../firestoreApi';\nimport {useNavigate, Navigate} from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\n\nconst Home = () => {\n  const [user, setUser] = useState(null);\n\nconst navigate = useNavigate();\n  const googleSignIn = () => {\n\n    signInWithPopup(auth, googleAuthProvider)\n    .then((result) => {\n      const user = result.user;\n      const {email, displayName} = user;\n      isUserExistEmail(email, {email, displayName});\n      setUser(user);\n      navigate('/users');\n      toast.success('Welcome to your CRM');\n    })\n    .catch((err) => {\n      if(err.message === \"Firebase: Error (auth/account-exists-with-different-credential).\") {\n        toast.error(\"Нou are already registered with this mail\");\n      }\n    });\n    \n  };\n  \n   const facebookSignIn = () => {\n    signInWithPopup(auth, facebookAuthProvider).then((result) => {\n      const user = result.user;\n      const {email, displayName} = user;\n      isUserExistEmail(email, {email, displayName});\n      setUser(user);\n      navigate('/users');\n      toast.success('Welcome to your CRM');\n    }).catch((err) => {\n      if(err.message === \"Firebase: Error (auth/account-exists-with-different-credential).\") {\n        toast.error(\"Нou are already registered with this mail\");\n      }\n    })\n  };\n\n const gitHubSignIn = () => {\n    signInWithPopup(auth, githubAuthProvider).then((result) => {\n      const user = result.user;\n      const {email, displayName} = user;\n      isUserExistEmail(email, {email, displayName});\n      setUser(user);\n      navigate('/users');\n      toast.success('Welcome to your CRM');\n    }).catch((err) => {\n      if(err.message === \"Firebase: Error (auth/account-exists-with-different-credential).\") {\n        toast.error(\"Нou are already registered with this mail\");\n      }\n      \n    })\n  };\n\n    return (\n        <div>\n        {user ? <Navigate to='/users'/>\n        : <>\n        <h1>Enter or register</h1>\n        <List inline>\n        <List.Item inline><Link onClick={googleSignIn}><img src={google} alt='google icon'/></Link></List.Item>\n        <List.Item inline><Link onClick={facebookSignIn}><img src={facebook} alt='facebook icon'/></Link></List.Item>\n        <List.Item inline><Link onClick={gitHubSignIn}><img src={github} alt='github icon'/></Link></List.Item>\n        <List.Item inline><Link to='/sign-up-with-email'><img src={mail} alt='mail icon'/></Link></List.Item>\n        <List.Item inline><Link to='/sign-up-with-phone'><img src={phone} alt='phone icon'/></Link></List.Item>\n      </List>\n        </>\n      }\n        </div>\n    )\n};\n\nexport default Home;","import { initializeApp } from 'firebase/app';\nimport { GithubAuthProvider, GoogleAuthProvider, getAuth, FacebookAuthProvider } from 'firebase/auth';\nimport {getFirestore} from 'firebase/firestore';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyD9vfvfkZR7Jm1x7wNDIhh6PcfI19jMWJg\",\n    authDomain: \"crm-project-4aaef.firebaseapp.com\",\n    projectId: \"crm-project-4aaef\",\n    storageBucket: \"crm-project-4aaef.appspot.com\",\n    messagingSenderId: \"161287361864\",\n    appId: \"1:161287361864:web:19d90ee4a5cc4a927ecf7d\"\n  };\n  \nexport const app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\nexport const googleAuthProvider = new GoogleAuthProvider();\nexport const githubAuthProvider = new GithubAuthProvider();\nexport const facebookAuthProvider = new FacebookAuthProvider();\n\n","import { collection, addDoc, getDocs, query, where } from 'firebase/firestore';\nimport { db } from './firebase';\n\nconst database = collection(db, 'users');\n\n export const getData = async (setData) => {\nconst data = await getDocs(database);\n    setData(data.docs.map(item => {\n      return {...item.data(), id: item.id }\n    }));\n  };\n\n\n export const isUserExistEmail = async (email, data) => {\n    const q = query(database, where(\"email\", \"==\", email))\n    \n    const querySnapshot = await getDocs(q);\n    \n    \n    if (querySnapshot.empty) {\n        await addDoc(database, data);\n      } \n    }\n\n    export const isUserExistPhone = async (phoneNumber, data) => {\n        const q = query(database, where(\"phoneNumber\", \"==\",  phoneNumber))\n        \n        const querySnapshot = await getDocs(q);\n        \n        \n        if (querySnapshot.empty) {\n            console.log(\"Add user\");\n           \n            await addDoc(database, data);\n          }\n        }"],"names":["useState","user","setUser","navigate","useNavigate","to","List","inline","onClick","signInWithPopup","auth","googleAuthProvider","then","result","email","displayName","isUserExistEmail","toast","catch","err","message","src","alt","facebookAuthProvider","githubAuthProvider","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","db","getFirestore","GoogleAuthProvider","GithubAuthProvider","FacebookAuthProvider","database","collection","getData","setData","getDocs","data","docs","map","item","id","q","query","where","empty","addDoc","isUserExistPhone","phoneNumber","console","log"],"sourceRoot":""}